// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.27.2
// source: sketch.proto

package proto

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountSketch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*IntRow              `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Seeds         []uint32               `protobuf:"varint,2,rep,packed,name=seeds,proto3" json:"seeds,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountSketch) Reset() {
	*x = CountSketch{}
	mi := &file_sketch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountSketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountSketch) ProtoMessage() {}

func (x *CountSketch) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountSketch.ProtoReflect.Descriptor instead.
func (*CountSketch) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{0}
}

func (x *CountSketch) GetRows() []*IntRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *CountSketch) GetSeeds() []uint32 {
	if x != nil {
		return x.Seeds
	}
	return nil
}

func (x *CountSketch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type IntRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           []int64                `protobuf:"varint,1,rep,packed,name=val,proto3" json:"val,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntRow) Reset() {
	*x = IntRow{}
	mi := &file_sketch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntRow) ProtoMessage() {}

func (x *IntRow) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntRow.ProtoReflect.Descriptor instead.
func (*IntRow) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{1}
}

func (x *IntRow) GetVal() []int64 {
	if x != nil {
		return x.Val
	}
	return nil
}

type CountQueryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Res           int64                  `protobuf:"varint,1,opt,name=res,proto3" json:"res,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountQueryReply) Reset() {
	*x = CountQueryReply{}
	mi := &file_sketch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountQueryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountQueryReply) ProtoMessage() {}

func (x *CountQueryReply) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountQueryReply.ProtoReflect.Descriptor instead.
func (*CountQueryReply) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{2}
}

func (x *CountQueryReply) GetRes() int64 {
	if x != nil {
		return x.Res
	}
	return 0
}

type KLLSketch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*NumericRow          `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	N             int64                  `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KLLSketch) Reset() {
	*x = KLLSketch{}
	mi := &file_sketch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KLLSketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KLLSketch) ProtoMessage() {}

func (x *KLLSketch) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KLLSketch.ProtoReflect.Descriptor instead.
func (*KLLSketch) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{3}
}

func (x *KLLSketch) GetRows() []*NumericRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *KLLSketch) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *KLLSketch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type BadArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Arr           *NumericRow            `protobuf:"bytes,1,opt,name=arr,proto3" json:"arr,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BadArray) Reset() {
	*x = BadArray{}
	mi := &file_sketch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BadArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadArray) ProtoMessage() {}

func (x *BadArray) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadArray.ProtoReflect.Descriptor instead.
func (*BadArray) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{4}
}

func (x *BadArray) GetArr() *NumericRow {
	if x != nil {
		return x.Arr
	}
	return nil
}

func (x *BadArray) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type NumericRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []*NumericValue        `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumericRow) Reset() {
	*x = NumericRow{}
	mi := &file_sketch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumericRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericRow) ProtoMessage() {}

func (x *NumericRow) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericRow.ProtoReflect.Descriptor instead.
func (*NumericRow) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{5}
}

func (x *NumericRow) GetValues() []*NumericValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type NumericValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*NumericValue_IntVal
	//	*NumericValue_FloatVal
	Value         isNumericValue_Value `protobuf_oneof:"value"`
	Type          string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NumericValue) Reset() {
	*x = NumericValue{}
	mi := &file_sketch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NumericValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericValue) ProtoMessage() {}

func (x *NumericValue) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericValue.ProtoReflect.Descriptor instead.
func (*NumericValue) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{6}
}

func (x *NumericValue) GetValue() isNumericValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *NumericValue) GetIntVal() int64 {
	if x != nil {
		if x, ok := x.Value.(*NumericValue_IntVal); ok {
			return x.IntVal
		}
	}
	return 0
}

func (x *NumericValue) GetFloatVal() float64 {
	if x != nil {
		if x, ok := x.Value.(*NumericValue_FloatVal); ok {
			return x.FloatVal
		}
	}
	return 0
}

func (x *NumericValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type isNumericValue_Value interface {
	isNumericValue_Value()
}

type NumericValue_IntVal struct {
	IntVal int64 `protobuf:"varint,1,opt,name=int_val,json=intVal,proto3,oneof"`
}

type NumericValue_FloatVal struct {
	FloatVal float64 `protobuf:"fixed64,2,opt,name=float_val,json=floatVal,proto3,oneof"`
}

func (*NumericValue_IntVal) isNumericValue_Value() {}

func (*NumericValue_FloatVal) isNumericValue_Value() {}

type ReverseQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phi           float64                `protobuf:"fixed64,1,opt,name=phi,proto3" json:"phi,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReverseQuery) Reset() {
	*x = ReverseQuery{}
	mi := &file_sketch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReverseQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReverseQuery) ProtoMessage() {}

func (x *ReverseQuery) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReverseQuery.ProtoReflect.Descriptor instead.
func (*ReverseQuery) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{7}
}

func (x *ReverseQuery) GetPhi() float64 {
	if x != nil {
		return x.Phi
	}
	return 0
}

func (x *ReverseQuery) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type QueryReturn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Phi           int64                  `protobuf:"varint,1,opt,name=phi,proto3" json:"phi,omitempty"`
	N             int64                  `protobuf:"varint,2,opt,name=N,proto3" json:"N,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryReturn) Reset() {
	*x = QueryReturn{}
	mi := &file_sketch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReturn) ProtoMessage() {}

func (x *QueryReturn) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReturn.ProtoReflect.Descriptor instead.
func (*QueryReturn) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{8}
}

func (x *QueryReturn) GetPhi() int64 {
	if x != nil {
		return x.Phi
	}
	return 0
}

func (x *QueryReturn) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

type MergeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int64                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeReply) Reset() {
	*x = MergeReply{}
	mi := &file_sketch_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeReply) ProtoMessage() {}

func (x *MergeReply) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeReply.ProtoReflect.Descriptor instead.
func (*MergeReply) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{9}
}

func (x *MergeReply) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

type PlotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumBins       int64                  `protobuf:"varint,1,opt,name=numBins,proto3" json:"numBins,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlotRequest) Reset() {
	*x = PlotRequest{}
	mi := &file_sketch_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotRequest) ProtoMessage() {}

func (x *PlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotRequest.ProtoReflect.Descriptor instead.
func (*PlotRequest) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{10}
}

func (x *PlotRequest) GetNumBins() int64 {
	if x != nil {
		return x.NumBins
	}
	return 0
}

func (x *PlotRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PlotKllReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Step          float64                `protobuf:"fixed64,1,opt,name=step,proto3" json:"step,omitempty"`
	Pmf           []float64              `protobuf:"fixed64,2,rep,packed,name=pmf,proto3" json:"pmf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlotKllReply) Reset() {
	*x = PlotKllReply{}
	mi := &file_sketch_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlotKllReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotKllReply) ProtoMessage() {}

func (x *PlotKllReply) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotKllReply.ProtoReflect.Descriptor instead.
func (*PlotKllReply) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{11}
}

func (x *PlotKllReply) GetStep() float64 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *PlotKllReply) GetPmf() []float64 {
	if x != nil {
		return x.Pmf
	}
	return nil
}

type EmptyMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyMessage) Reset() {
	*x = EmptyMessage{}
	mi := &file_sketch_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyMessage) ProtoMessage() {}

func (x *EmptyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyMessage.ProtoReflect.Descriptor instead.
func (*EmptyMessage) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{12}
}

type RestartMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumMsg        int64                  `protobuf:"varint,1,opt,name=numMsg,proto3" json:"numMsg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestartMessage) Reset() {
	*x = RestartMessage{}
	mi := &file_sketch_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestartMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartMessage) ProtoMessage() {}

func (x *RestartMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartMessage.ProtoReflect.Descriptor instead.
func (*RestartMessage) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{13}
}

func (x *RestartMessage) GetNumMsg() int64 {
	if x != nil {
		return x.NumMsg
	}
	return 0
}

type ASketch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        []*ASketchFilterEntry  `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	CountMin      *CountMin              `protobuf:"bytes,2,opt,name=count_min,json=countMin,proto3" json:"count_min,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Field         string                 `protobuf:"bytes,4,opt,name=field,proto3" json:"field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASketch) Reset() {
	*x = ASketch{}
	mi := &file_sketch_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASketch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASketch) ProtoMessage() {}

func (x *ASketch) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASketch.ProtoReflect.Descriptor instead.
func (*ASketch) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{14}
}

func (x *ASketch) GetFilter() []*ASketchFilterEntry {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ASketch) GetCountMin() *CountMin {
	if x != nil {
		return x.CountMin
	}
	return nil
}

func (x *ASketch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ASketch) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

type ASketchFilterEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *NumericValue          `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Old           int64                  `protobuf:"varint,2,opt,name=old,proto3" json:"old,omitempty"`
	New           int64                  `protobuf:"varint,3,opt,name=new,proto3" json:"new,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ASketchFilterEntry) Reset() {
	*x = ASketchFilterEntry{}
	mi := &file_sketch_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ASketchFilterEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASketchFilterEntry) ProtoMessage() {}

func (x *ASketchFilterEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASketchFilterEntry.ProtoReflect.Descriptor instead.
func (*ASketchFilterEntry) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{15}
}

func (x *ASketchFilterEntry) GetItem() *NumericValue {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ASketchFilterEntry) GetOld() int64 {
	if x != nil {
		return x.Old
	}
	return 0
}

func (x *ASketchFilterEntry) GetNew() int64 {
	if x != nil {
		return x.New
	}
	return 0
}

type BufBatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*NumericValue        `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // e.g., "int", "double"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BufBatch) Reset() {
	*x = BufBatch{}
	mi := &file_sketch_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufBatch) ProtoMessage() {}

func (x *BufBatch) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufBatch.ProtoReflect.Descriptor instead.
func (*BufBatch) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{16}
}

func (x *BufBatch) GetItems() []*NumericValue {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BufBatch) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CountMin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*IntRow              `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Seeds         []uint32               `protobuf:"varint,2,rep,packed,name=seeds,proto3" json:"seeds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountMin) Reset() {
	*x = CountMin{}
	mi := &file_sketch_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountMin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMin) ProtoMessage() {}

func (x *CountMin) ProtoReflect() protoreflect.Message {
	mi := &file_sketch_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMin.ProtoReflect.Descriptor instead.
func (*CountMin) Descriptor() ([]byte, []int) {
	return file_sketch_proto_rawDescGZIP(), []int{17}
}

func (x *CountMin) GetRows() []*IntRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *CountMin) GetSeeds() []uint32 {
	if x != nil {
		return x.Seeds
	}
	return nil
}

var File_sketch_proto protoreflect.FileDescriptor

const file_sketch_proto_rawDesc = "" +
	"\n" +
	"\fsketch.proto\x12\x05proto\"Z\n" +
	"\vCountSketch\x12!\n" +
	"\x04rows\x18\x01 \x03(\v2\r.proto.IntRowR\x04rows\x12\x14\n" +
	"\x05seeds\x18\x02 \x03(\rR\x05seeds\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"\x1a\n" +
	"\x06IntRow\x12\x10\n" +
	"\x03val\x18\x01 \x03(\x03R\x03val\"#\n" +
	"\x0fCountQueryReply\x12\x10\n" +
	"\x03res\x18\x01 \x01(\x03R\x03res\"T\n" +
	"\tKLLSketch\x12%\n" +
	"\x04rows\x18\x01 \x03(\v2\x11.proto.NumericRowR\x04rows\x12\f\n" +
	"\x01n\x18\x02 \x01(\x03R\x01n\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\"C\n" +
	"\bBadArray\x12#\n" +
	"\x03arr\x18\x01 \x01(\v2\x11.proto.NumericRowR\x03arr\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"9\n" +
	"\n" +
	"NumericRow\x12+\n" +
	"\x06values\x18\x01 \x03(\v2\x13.proto.NumericValueR\x06values\"e\n" +
	"\fNumericValue\x12\x19\n" +
	"\aint_val\x18\x01 \x01(\x03H\x00R\x06intVal\x12\x1d\n" +
	"\tfloat_val\x18\x02 \x01(\x01H\x00R\bfloatVal\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04typeB\a\n" +
	"\x05value\"4\n" +
	"\fReverseQuery\x12\x10\n" +
	"\x03phi\x18\x01 \x01(\x01R\x03phi\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"-\n" +
	"\vQueryReturn\x12\x10\n" +
	"\x03phi\x18\x01 \x01(\x03R\x03phi\x12\f\n" +
	"\x01N\x18\x02 \x01(\x03R\x01N\"$\n" +
	"\n" +
	"MergeReply\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x03R\x06status\";\n" +
	"\vPlotRequest\x12\x18\n" +
	"\anumBins\x18\x01 \x01(\x03R\anumBins\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"4\n" +
	"\fPlotKllReply\x12\x12\n" +
	"\x04step\x18\x01 \x01(\x01R\x04step\x12\x10\n" +
	"\x03pmf\x18\x02 \x03(\x01R\x03pmf\"\x0e\n" +
	"\fEmptyMessage\"(\n" +
	"\x0eRestartMessage\x12\x16\n" +
	"\x06numMsg\x18\x01 \x01(\x03R\x06numMsg\"\x94\x01\n" +
	"\aASketch\x121\n" +
	"\x06filter\x18\x01 \x03(\v2\x19.proto.ASketchFilterEntryR\x06filter\x12,\n" +
	"\tcount_min\x18\x02 \x01(\v2\x0f.proto.CountMinR\bcountMin\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x14\n" +
	"\x05field\x18\x04 \x01(\tR\x05field\"a\n" +
	"\x12ASketchFilterEntry\x12'\n" +
	"\x04item\x18\x01 \x01(\v2\x13.proto.NumericValueR\x04item\x12\x10\n" +
	"\x03old\x18\x02 \x01(\x03R\x03old\x12\x10\n" +
	"\x03new\x18\x03 \x01(\x03R\x03new\"I\n" +
	"\bBufBatch\x12)\n" +
	"\x05items\x18\x01 \x03(\v2\x13.proto.NumericValueR\x05items\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\"C\n" +
	"\bCountMin\x12!\n" +
	"\x04rows\x18\x01 \x03(\v2\r.proto.IntRowR\x04rows\x12\x14\n" +
	"\x05seeds\x18\x02 \x03(\rR\x05seeds2\xea\x05\n" +
	"\bSketcher\x121\n" +
	"\bMergeKll\x12\x10.proto.KLLSketch\x1a\x11.proto.MergeReply\"\x00\x125\n" +
	"\bQueryKll\x12\x13.proto.NumericValue\x1a\x12.proto.QueryReturn\"\x00\x12=\n" +
	"\x0fReverseQueryKll\x12\x13.proto.ReverseQuery\x1a\x13.proto.NumericValue\"\x00\x124\n" +
	"\aPlotKll\x12\x12.proto.PlotRequest\x1a\x13.proto.PlotKllReply\"\x00\x125\n" +
	"\n" +
	"MergeCount\x12\x12.proto.CountSketch\x1a\x11.proto.MergeReply\"\x00\x12;\n" +
	"\n" +
	"QueryCount\x12\x13.proto.NumericValue\x1a\x16.proto.CountQueryReply\"\x00\x129\n" +
	"\vTestLatency\x12\x13.proto.EmptyMessage\x1a\x13.proto.EmptyMessage\"\x00\x12.\n" +
	"\x06BadKll\x12\x0f.proto.BadArray\x1a\x11.proto.MergeReply\"\x00\x120\n" +
	"\bBadCount\x12\x0f.proto.BadArray\x1a\x11.proto.MergeReply\"\x00\x123\n" +
	"\fMergeASketch\x12\x0e.proto.ASketch\x1a\x11.proto.MergeReply\"\x00\x12=\n" +
	"\fQueryASketch\x12\x13.proto.NumericValue\x1a\x16.proto.CountQueryReply\"\x00\x12=\n" +
	"\rRestartServer\x12\x15.proto.RestartMessage\x1a\x13.proto.EmptyMessage\"\x00\x12;\n" +
	"\x13MergeBufIntoASketch\x12\x0f.proto.BufBatch\x1a\x11.proto.MergeReply\"\x00B/Z-github.com/bruhng/distributed-sketching/protob\x06proto3"

var (
	file_sketch_proto_rawDescOnce sync.Once
	file_sketch_proto_rawDescData []byte
)

func file_sketch_proto_rawDescGZIP() []byte {
	file_sketch_proto_rawDescOnce.Do(func() {
		file_sketch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sketch_proto_rawDesc), len(file_sketch_proto_rawDesc)))
	})
	return file_sketch_proto_rawDescData
}

var file_sketch_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sketch_proto_goTypes = []any{
	(*CountSketch)(nil),        // 0: proto.CountSketch
	(*IntRow)(nil),             // 1: proto.IntRow
	(*CountQueryReply)(nil),    // 2: proto.CountQueryReply
	(*KLLSketch)(nil),          // 3: proto.KLLSketch
	(*BadArray)(nil),           // 4: proto.BadArray
	(*NumericRow)(nil),         // 5: proto.NumericRow
	(*NumericValue)(nil),       // 6: proto.NumericValue
	(*ReverseQuery)(nil),       // 7: proto.ReverseQuery
	(*QueryReturn)(nil),        // 8: proto.QueryReturn
	(*MergeReply)(nil),         // 9: proto.MergeReply
	(*PlotRequest)(nil),        // 10: proto.PlotRequest
	(*PlotKllReply)(nil),       // 11: proto.PlotKllReply
	(*EmptyMessage)(nil),       // 12: proto.EmptyMessage
	(*RestartMessage)(nil),     // 13: proto.RestartMessage
	(*ASketch)(nil),            // 14: proto.ASketch
	(*ASketchFilterEntry)(nil), // 15: proto.ASketchFilterEntry
	(*BufBatch)(nil),           // 16: proto.BufBatch
	(*CountMin)(nil),           // 17: proto.CountMin
}
var file_sketch_proto_depIdxs = []int32{
	1,  // 0: proto.CountSketch.rows:type_name -> proto.IntRow
	5,  // 1: proto.KLLSketch.rows:type_name -> proto.NumericRow
	5,  // 2: proto.BadArray.arr:type_name -> proto.NumericRow
	6,  // 3: proto.NumericRow.values:type_name -> proto.NumericValue
	15, // 4: proto.ASketch.filter:type_name -> proto.ASketchFilterEntry
	17, // 5: proto.ASketch.count_min:type_name -> proto.CountMin
	6,  // 6: proto.ASketchFilterEntry.item:type_name -> proto.NumericValue
	6,  // 7: proto.BufBatch.items:type_name -> proto.NumericValue
	1,  // 8: proto.CountMin.rows:type_name -> proto.IntRow
	3,  // 9: proto.Sketcher.MergeKll:input_type -> proto.KLLSketch
	6,  // 10: proto.Sketcher.QueryKll:input_type -> proto.NumericValue
	7,  // 11: proto.Sketcher.ReverseQueryKll:input_type -> proto.ReverseQuery
	10, // 12: proto.Sketcher.PlotKll:input_type -> proto.PlotRequest
	0,  // 13: proto.Sketcher.MergeCount:input_type -> proto.CountSketch
	6,  // 14: proto.Sketcher.QueryCount:input_type -> proto.NumericValue
	12, // 15: proto.Sketcher.TestLatency:input_type -> proto.EmptyMessage
	4,  // 16: proto.Sketcher.BadKll:input_type -> proto.BadArray
	4,  // 17: proto.Sketcher.BadCount:input_type -> proto.BadArray
	14, // 18: proto.Sketcher.MergeASketch:input_type -> proto.ASketch
	6,  // 19: proto.Sketcher.QueryASketch:input_type -> proto.NumericValue
	13, // 20: proto.Sketcher.RestartServer:input_type -> proto.RestartMessage
	16, // 21: proto.Sketcher.MergeBufIntoASketch:input_type -> proto.BufBatch
	9,  // 22: proto.Sketcher.MergeKll:output_type -> proto.MergeReply
	8,  // 23: proto.Sketcher.QueryKll:output_type -> proto.QueryReturn
	6,  // 24: proto.Sketcher.ReverseQueryKll:output_type -> proto.NumericValue
	11, // 25: proto.Sketcher.PlotKll:output_type -> proto.PlotKllReply
	9,  // 26: proto.Sketcher.MergeCount:output_type -> proto.MergeReply
	2,  // 27: proto.Sketcher.QueryCount:output_type -> proto.CountQueryReply
	12, // 28: proto.Sketcher.TestLatency:output_type -> proto.EmptyMessage
	9,  // 29: proto.Sketcher.BadKll:output_type -> proto.MergeReply
	9,  // 30: proto.Sketcher.BadCount:output_type -> proto.MergeReply
	9,  // 31: proto.Sketcher.MergeASketch:output_type -> proto.MergeReply
	2,  // 32: proto.Sketcher.QueryASketch:output_type -> proto.CountQueryReply
	12, // 33: proto.Sketcher.RestartServer:output_type -> proto.EmptyMessage
	9,  // 34: proto.Sketcher.MergeBufIntoASketch:output_type -> proto.MergeReply
	22, // [22:35] is the sub-list for method output_type
	9,  // [9:22] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_sketch_proto_init() }
func file_sketch_proto_init() {
	if File_sketch_proto != nil {
		return
	}
	file_sketch_proto_msgTypes[6].OneofWrappers = []any{
		(*NumericValue_IntVal)(nil),
		(*NumericValue_FloatVal)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sketch_proto_rawDesc), len(file_sketch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sketch_proto_goTypes,
		DependencyIndexes: file_sketch_proto_depIdxs,
		MessageInfos:      file_sketch_proto_msgTypes,
	}.Build()
	File_sketch_proto = out.File
	file_sketch_proto_goTypes = nil
	file_sketch_proto_depIdxs = nil
}
